// <auto-generated />
using System;
using Investimento.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Investimento.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240620174428_Moeda")]
    partial class Moeda
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("API_Investimento.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DataAcesso")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("Varchar");

                    b.Property<byte[]>("Foto")
                        .HasColumnType("varbinary(max)");

                    b.Property<double?>("Latitude")
                        .HasColumnType("float");

                    b.Property<double?>("Longitude")
                        .HasColumnType("float");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Perfil")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(200)
                        .HasColumnType("Varchar")
                        .HasDefaultValue("Insvetidor");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("Varchar");

                    b.HasKey("Id");

                    b.ToTable("TB_USUARIOS", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "seuEmail@gamil.com",
                            Latitude = -23.520024100000001,
                            Longitude = -46.596497999999997,
                            PasswordHash = new byte[] { 124, 106, 211, 254, 16, 161, 213, 99, 83, 100, 184, 129, 91, 252, 211, 73, 122, 63, 239, 215, 141, 61, 106, 195, 1, 193, 26, 248, 234, 78, 224, 58, 123, 145, 219, 91, 55, 240, 54, 192, 102, 11, 45, 33, 168, 50, 210, 94, 1, 184, 195, 150, 213, 175, 128, 68, 93, 213, 218, 230, 0, 208, 27, 30, 170, 148, 150, 87, 132, 93, 47, 233, 176, 205, 250, 100, 125, 55, 0, 30, 57, 3, 90, 130, 6, 182, 0, 65, 130, 38, 6, 126, 57, 51, 188, 215, 35, 100, 223, 246, 242, 133, 92, 30, 175, 7, 213, 236, 191, 235, 135, 22, 164, 54, 176, 202, 82, 6, 19, 95, 68, 207, 118, 27, 11, 66, 172, 186 },
                            Perfil = "Admin",
                            Username = "usuarioadmin"
                        });
                });

            modelBuilder.Entity("Investimento.Models.Moeda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<double>("Imposto")
                        .HasColumnType("float");

                    b.Property<double>("Lucro")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("Varchar");

                    b.Property<int>("Operacao")
                        .HasColumnType("int");

                    b.Property<double>("Prejuizo")
                        .HasColumnType("float");

                    b.Property<double>("Quantidade")
                        .HasColumnType("float");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.Property<double>("Valor")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("TB_MOEDA", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Data = new DateTime(2024, 6, 20, 17, 44, 27, 826, DateTimeKind.Local).AddTicks(7376),
                            Imposto = 25.5,
                            Lucro = 250.0,
                            Name = "BTC",
                            Operacao = 2,
                            Prejuizo = 0.0,
                            Quantidade = 0.0050000000000000001,
                            Valor = 65000.0
                        },
                        new
                        {
                            Id = 2,
                            Data = new DateTime(2024, 6, 20, 17, 44, 27, 826, DateTimeKind.Local).AddTicks(7462),
                            Imposto = 25.5,
                            Lucro = 125.0,
                            Name = "ETH",
                            Operacao = 2,
                            Prejuizo = 0.0,
                            Quantidade = 0.02,
                            Valor = 3500.0
                        },
                        new
                        {
                            Id = 3,
                            Data = new DateTime(2024, 6, 20, 17, 44, 27, 826, DateTimeKind.Local).AddTicks(7465),
                            Imposto = 25.5,
                            Lucro = 30.0,
                            Name = "SHIB",
                            Operacao = 2,
                            Prejuizo = 0.0,
                            Quantidade = 1123456.2,
                            Valor = 2.4369999999999999E-05
                        },
                        new
                        {
                            Id = 4,
                            Data = new DateTime(2024, 6, 20, 17, 44, 27, 826, DateTimeKind.Local).AddTicks(7467),
                            Imposto = 25.5,
                            Lucro = 5.0,
                            Name = "DOGE",
                            Operacao = 2,
                            Prejuizo = 0.0,
                            Quantidade = 124353.556,
                            Valor = 0.16
                        },
                        new
                        {
                            Id = 5,
                            Data = new DateTime(2024, 6, 20, 17, 44, 27, 826, DateTimeKind.Local).AddTicks(7470),
                            Imposto = 25.5,
                            Lucro = 0.0,
                            Name = "ADA",
                            Operacao = 2,
                            Prejuizo = 50.0,
                            Quantidade = 1202.1199999999999,
                            Valor = 0.45660000000000001
                        },
                        new
                        {
                            Id = 6,
                            Data = new DateTime(2024, 6, 20, 17, 44, 27, 826, DateTimeKind.Local).AddTicks(7471),
                            Imposto = 25.5,
                            Lucro = 12.0,
                            Name = "BNB",
                            Operacao = 2,
                            Prejuizo = 0.0,
                            Quantidade = 54.0,
                            Valor = 500.0
                        },
                        new
                        {
                            Id = 7,
                            Data = new DateTime(2024, 6, 20, 17, 44, 27, 826, DateTimeKind.Local).AddTicks(7473),
                            Imposto = 25.5,
                            Lucro = 50.0,
                            Name = "FLOKI",
                            Operacao = 2,
                            Prejuizo = 0.0,
                            Quantidade = 456543156.12,
                            Valor = 3.5649999999999999E-05
                        });
                });

            modelBuilder.Entity("Investimento.Models.Moeda", b =>
                {
                    b.HasOne("API_Investimento.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId");

                    b.Navigation("Usuario");
                });
#pragma warning restore 612, 618
        }
    }
}
