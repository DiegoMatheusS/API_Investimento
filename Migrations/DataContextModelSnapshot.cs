// <auto-generated />
using System;
using Investimento.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Investimento.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("API_Investimento.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DataAcesso")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("Varchar");

                    b.Property<byte[]>("Foto")
                        .HasColumnType("varbinary(max)");

                    b.Property<double?>("Latitude")
                        .HasColumnType("float");

                    b.Property<double?>("Longitude")
                        .HasColumnType("float");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Perfil")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(200)
                        .HasColumnType("Varchar")
                        .HasDefaultValue("Insvetidor");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("Varchar");

                    b.HasKey("Id");

                    b.ToTable("TB_USUARIOS", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "seuEmail@gamil.com",
                            Latitude = -23.520024100000001,
                            Longitude = -46.596497999999997,
                            PasswordHash = new byte[] { 131, 106, 246, 240, 74, 32, 121, 62, 146, 236, 176, 162, 219, 200, 127, 201, 56, 42, 178, 239, 63, 19, 205, 60, 99, 238, 14, 242, 221, 107, 52, 141, 166, 15, 193, 40, 34, 133, 59, 4, 65, 66, 225, 153, 21, 113, 185, 198, 106, 118, 36, 63, 7, 163, 205, 132, 186, 224, 160, 181, 89, 13, 5, 109, 185, 200, 140, 80, 102, 178, 97, 28, 214, 167, 27, 165, 5, 133, 231, 67, 124, 189, 202, 215, 207, 71, 252, 64, 198, 7, 32, 183, 171, 169, 23, 148, 171, 177, 185, 76, 223, 146, 137, 125, 207, 116, 161, 106, 176, 168, 82, 34, 81, 48, 143, 211, 71, 7, 35, 242, 17, 208, 242, 53, 161, 181, 28, 44 },
                            Perfil = "Admin",
                            Username = "usuarioadmin"
                        });
                });

            modelBuilder.Entity("Investimento.Models.Enuns.Moeda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataCompra")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataVenda")
                        .HasColumnType("datetime2");

                    b.Property<double>("Imposto")
                        .HasColumnType("float");

                    b.Property<double>("Lucro")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("Varchar");

                    b.Property<double>("Prejuizo")
                        .HasColumnType("float");

                    b.Property<double>("Quantidade")
                        .HasColumnType("float");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.Property<double>("Valor")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("TB_MOEDA", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataCompra = new DateTime(2024, 6, 9, 0, 11, 10, 479, DateTimeKind.Local).AddTicks(2555),
                            DataVenda = new DateTime(2024, 6, 9, 0, 11, 10, 479, DateTimeKind.Local).AddTicks(2564),
                            Imposto = 25.5,
                            Lucro = 250.0,
                            Name = "BTC",
                            Prejuizo = 0.0,
                            Quantidade = 0.0050000000000000001,
                            Valor = 65000.0
                        },
                        new
                        {
                            Id = 2,
                            DataCompra = new DateTime(2024, 6, 9, 0, 11, 10, 479, DateTimeKind.Local).AddTicks(2566),
                            DataVenda = new DateTime(2024, 6, 9, 0, 11, 10, 479, DateTimeKind.Local).AddTicks(2566),
                            Imposto = 25.5,
                            Lucro = 125.0,
                            Name = "ETH",
                            Prejuizo = 0.0,
                            Quantidade = 0.02,
                            Valor = 3500.0
                        },
                        new
                        {
                            Id = 3,
                            DataCompra = new DateTime(2024, 6, 9, 0, 11, 10, 479, DateTimeKind.Local).AddTicks(2568),
                            DataVenda = new DateTime(2024, 6, 9, 0, 11, 10, 479, DateTimeKind.Local).AddTicks(2569),
                            Imposto = 25.5,
                            Lucro = 30.0,
                            Name = "SHIB",
                            Prejuizo = 0.0,
                            Quantidade = 1123456.2,
                            Valor = 2.4369999999999999E-05
                        },
                        new
                        {
                            Id = 4,
                            DataCompra = new DateTime(2024, 6, 9, 0, 11, 10, 479, DateTimeKind.Local).AddTicks(2570),
                            DataVenda = new DateTime(2024, 6, 9, 0, 11, 10, 479, DateTimeKind.Local).AddTicks(2571),
                            Imposto = 25.5,
                            Lucro = 5.0,
                            Name = "DOGE",
                            Prejuizo = 0.0,
                            Quantidade = 124353.556,
                            Valor = 0.16
                        },
                        new
                        {
                            Id = 5,
                            DataCompra = new DateTime(2024, 6, 9, 0, 11, 10, 479, DateTimeKind.Local).AddTicks(2572),
                            DataVenda = new DateTime(2024, 6, 9, 0, 11, 10, 479, DateTimeKind.Local).AddTicks(2573),
                            Imposto = 25.5,
                            Lucro = 0.0,
                            Name = "ADA",
                            Prejuizo = 50.0,
                            Quantidade = 1202.1199999999999,
                            Valor = 0.45660000000000001
                        },
                        new
                        {
                            Id = 6,
                            DataCompra = new DateTime(2024, 6, 9, 0, 11, 10, 479, DateTimeKind.Local).AddTicks(2574),
                            DataVenda = new DateTime(2024, 6, 9, 0, 11, 10, 479, DateTimeKind.Local).AddTicks(2574),
                            Imposto = 25.5,
                            Lucro = 12.0,
                            Name = "BNB",
                            Prejuizo = 0.0,
                            Quantidade = 54.0,
                            Valor = 500.0
                        },
                        new
                        {
                            Id = 7,
                            DataCompra = new DateTime(2024, 6, 9, 0, 11, 10, 479, DateTimeKind.Local).AddTicks(2576),
                            DataVenda = new DateTime(2024, 6, 9, 0, 11, 10, 479, DateTimeKind.Local).AddTicks(2576),
                            Imposto = 25.5,
                            Lucro = 50.0,
                            Name = "FLOKI",
                            Prejuizo = 0.0,
                            Quantidade = 456543156.12,
                            Valor = 3.5649999999999999E-05
                        });
                });

            modelBuilder.Entity("Investimento.Models.Enuns.Moeda", b =>
                {
                    b.HasOne("API_Investimento.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId");

                    b.Navigation("Usuario");
                });
#pragma warning restore 612, 618
        }
    }
}
